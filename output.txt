ExEy(P(x,y)/\Ex~P(x,y)) is an existentially quantified formula.
Initial formulas: ['ExEy(P(x,y)/\\Ex~P(x,y))']

Popped from stack:
Formulas: ['ExEy(P(x,y)/\\Ex~P(x,y))']
Constants: []
Processed: set()
Constants count: 0

Processing formula: ExEy(P(x,y)/\Ex~P(x,y))
Processed set updated: {'ExEy(P(x,y)/\\Ex~P(x,y))'}
Parsed type: 4
Existential quantifier: ExEy(P(x,y)/\Ex~P(x,y))
Introduced new constant: c1
Adding instantiated formula: Ey(P(c1,y)/\Ex~P(c1,y))

Processing formula: Ey(P(c1,y)/\Ex~P(c1,y))
Processed set updated: {'Ey(P(c1,y)/\\Ex~P(c1,y))', 'ExEy(P(x,y)/\\Ex~P(x,y))'}
Parsed type: 4
Existential quantifier: Ey(P(c1,y)/\Ex~P(c1,y))
Introduced new constant: c2
Adding instantiated formula: (P(c1,c2)/\Ex~P(c1,c2))

Processing formula: (P(c1,c2)/\Ex~P(c1,c2))
Processed set updated: {'Ey(P(c1,y)/\\Ex~P(c1,y))', 'ExEy(P(x,y)/\\Ex~P(x,y))', '(P(c1,c2)/\\Ex~P(c1,c2))'}
Parsed type: 5
Binary connective: (P(c1,c2)/\Ex~P(c1,c2))
Adding LHS and RHS to formulas

Processing formula: P(c1,c2)
Processed set updated: {'Ey(P(c1,y)/\\Ex~P(c1,y))', 'ExEy(P(x,y)/\\Ex~P(x,y))', 'P(c1,c2)', '(P(c1,c2)/\\Ex~P(c1,c2))'}
Parsed type: 0
Assuming atom: P(c1,c2)

Processing formula: Ex~P(c1,c2)
Processed set updated: {'ExEy(P(x,y)/\\Ex~P(x,y))', 'Ex~P(c1,c2)', 'Ey(P(c1,y)/\\Ex~P(c1,y))', 'P(c1,c2)', '(P(c1,c2)/\\Ex~P(c1,c2))'}
Parsed type: 4
Existential quantifier: Ex~P(c1,c2)
Introduced new constant: c3
Adding instantiated formula: ~P(c1,c2)

Processing formula: ~P(c1,c2)
Contradiction found with negation of formula: ~P(c1,c2)
Branch closed due to contradiction
All branches closed
ExEy(P(x,y)/\Ex~P(x,y)) is not satisfiable.
